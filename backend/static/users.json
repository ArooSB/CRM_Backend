{
  "swagger": "2.0",
  "info": {
    "title": "CRM Worker Management API",
    "description": "Endpoints for managing workers, support tickets, and sales leads in the CRM app.",
    "version": "1.0.0"
  },
  "host": "crm-backend-waks.onrender.com",
  "schemes": ["https"],
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter your bearer token in the format **Bearer <token>**"
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/workers": {
      "post": {
        "summary": "Create Worker",
        "description": "Create a new worker account. Only accessible by admin.",
        "security": [{"BearerAuth": []}],
        "tags": ["Workers"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {"type": "string"},
                "password": {"type": "string"},
                "first_name": {"type": "string"},
                "last_name": {"type": "string"},
                "position": {"type": "string"},
                "email": {"type": "string"}
              },
              "required": ["username", "password", "first_name", "last_name", "position", "email"]
            }
          }
        ],
        "responses": {
          "201": {"description": "Worker created successfully."},
          "400": {"description": "Missing required fields or duplicate worker data."},
          "403": {"description": "Permission denied."}
        }
      },
      "get": {
        "summary": "Retrieve Workers",
        "description": "Get a list of all workers. Only accessible by admin.",
        "security": [{"BearerAuth": []}],
        "tags": ["Workers"],
        "responses": {
          "200": {
            "description": "List of workers retrieved successfully.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "worker_id": {"type": "integer"},
                  "username": {"type": "string"},
                  "first_name": {"type": "string"},
                  "last_name": {"type": "string"},
                  "position": {"type": "string"},
                  "email": {"type": "string"},
                  "created_at": {"type": "string"}
                }
              }
            }
          },
          "403": {"description": "Permission denied."}
        }
      }
    },
    "/workers/login": {
      "post": {
        "summary": "Login Worker",
        "description": "Authenticate a worker and return a JWT.",
        "tags": ["Workers"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {"type": "string"},
                "password": {"type": "string"}
              },
              "required": ["username", "password"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful.",
            "schema": {
              "type": "object",
              "properties": {
                "token": {"type": "string"},
                "message": {"type": "string"}
              }
            }
          },
          "401": {"description": "Invalid credentials."}
        }
      }
    },
    "/workers/{id}": {
      "put": {
        "summary": "Update Worker",
        "description": "Update an existing worker's information. Admin only.",
        "security": [{"BearerAuth": []}],
        "tags": ["Workers"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Worker ID to update."
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "first_name": {"type": "string"},
                "last_name": {"type": "string"},
                "position": {"type": "string"},
                "email": {"type": "string"}
              }
            }
          }
        ],
        "responses": {
          "200": {"description": "Worker updated successfully."},
          "404": {"description": "Worker not found."},
          "403": {"description": "Permission denied."}
        }
      },
      "delete": {
        "summary": "Delete Worker",
        "description": "Delete a worker's account. Admin only.",
        "security": [{"BearerAuth": []}],
        "tags": ["Workers"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Worker ID to delete."
          }
        ],
        "responses": {
          "200": {"description": "Worker deleted successfully."},
          "404": {"description": "Worker not found."},
          "403": {"description": "Permission denied."}
        }
      }
    },
    "/workers/me": {
      "get": {
        "summary": "Get My Profile",
        "description": "Retrieve the currently logged-in worker's profile.",
        "security": [{"BearerAuth": []}],
        "tags": ["Workers"],
        "responses": {
          "200": {
            "description": "Profile retrieved successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "worker_id": {"type": "integer"},
                "username": {"type": "string"},
                "first_name": {"type": "string"},
                "last_name": {"type": "string"},
                "position": {"type": "string"},
                "email": {"type": "string"},
                "created_at": {"type": "string"}
              }
            }
          },
          "401": {"description": "Authorization required."}
        }
      }
    },
    "/analytics/reports": {

  "get": {
    "summary": "Get Monthly Analytics Report",
    "description": "Generates a monthly analytics report based on an optional date range.",
    "tags": ["analytics"],
    "parameters": [
      {
        "name": "start_date",
        "in": "query",
        "description": "Start date for the report (YYYY-MM-DD).",
        "required": false,
        "type": "string",
        "format": "date"
      },
      {
        "name": "end_date",
        "in": "query",
        "description": "End date for the report (YYYY-MM-DD).",
        "required": false,
        "type": "string",
        "format": "date"
      }
    ],
    "responses": {
      "200": {
        "description": "Monthly analytics report generated successfully.",
        "schema": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "customer_id": { "type": "integer" },
              "worker_id": { "type": "integer" },
              "metric_value": { "type": "string" },
              "count": { "type": "integer" }
            }
          }
        }
      },
      "400": {
        "description": "Invalid request parameters."
      }
    },
    "security": [{ "BearerAuth": [] }]
  }
}

  }
}